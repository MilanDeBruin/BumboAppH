@using Bumbo.Domain.Models;
@using Bumbo.App.Web.Models.ViewModels.Home;


@model Bumbo.App.Web.Models.ViewModels.Home.WeekPersonalScheduleViewModel

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/rooster_bekijken.css">
</head>

<body>
    <h2>Rooster Week </h2>
    <div style="display: flex; align-items: center; gap: 20px; border: 1px solid #ccc; padding: 10px; border-radius: 5px;">

            <button class="btn btn-secondary">Week terug</button>
            <button class="btn btn-secondary">Week vooruit</button>
    </div>

    <div class="flex-container">
        @{
            // Ensure we always have 7 blocks, one for each day of the week
            var daysOfWeek = Enumerable.Range(0, 7).Select(i => DateOnly.FromDateTime(DateTime.Today).AddDays(i)).ToList();
        }

        @foreach (var day in daysOfWeek)
        {
            // Find matching WorkDay for the current day
            var workDay = Model.WorkDays.FirstOrDefault(w => w.date == day);

            var shiftsForDay = Model.WorkDays.Where(w => w.date == day).ToList();


            <div class="big_square">
            @if (shiftsForDay.Any())
            {
             foreach(var shifts in shiftsForDay)
             {
                    <div class="square">
                    Datum: @day.ToString("yyyy-MM-dd") <br />
                    Tijd: @(workDay != null ? $"{workDay.StartTime:hh\\:mm} - {workDay.endTime:hh\\:mm}" : "") <br />
                    Afdeling: @(workDay?.Departement ?? "") <br />
                    Filiaal: @(workDay?.Branch_Id > 0 ? workDay.Branch_Id.ToString() : "") <br />
                    <hr/>
                        </div>
                    }
                }
            </div>
            }
        
    </div>

</body>
